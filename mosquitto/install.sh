#!/data/data/com.termux/files/usr/bin/bash
# =============================================================================
# Mosquitto 安装脚本
# 版本: v1.0.0
# 功能: 安装 Mosquitto MQTT 服务器
# =============================================================================

set -euo pipefail

# 加载统一路径定义
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
source "$SCRIPT_DIR/common_paths.sh" || {
    echo "Error: Cannot load common paths"
    exit 1
}

# 设置脚本特定的日志文件
LOG_FILE="$LOG_FILE_INSTALL"

# 确保必要目录存在
ensure_directories

START_TIME=$(date +%s)

log "starting mosquitto installation process"
mqtt_report "isg/install/$SERVICE_ID/status" "{\"status\":\"installing\",\"message\":\"starting installation process\",\"timestamp\":$(date +%s)}"

# -----------------------------------------------------------------------------
# 读取服务依赖配置
# -----------------------------------------------------------------------------
log "reading service dependencies from serviceupdate.json"
mqtt_report "isg/install/$SERVICE_ID/status" "{\"status\":\"installing\",\"message\":\"reading service dependencies from serviceupdate.json\",\"timestamp\":$(date +%s)}"

if [ ! -f "$SERVICEUPDATE_FILE" ]; then
    log "serviceupdate.json not found, using default dependencies"
    DEPENDENCIES='[]'
else
    DEPENDENCIES=$(jq -c ".services[] | select(.id==\"$SERVICE_ID\") | .install_dependencies // []" "$SERVICEUPDATE_FILE" 2>/dev/null || echo '[]')
fi

# 转换为 bash 数组
DEPS_ARRAY=($(echo "$DEPENDENCIES" | jq -r '.[]' 2>/dev/null || echo ""))

if [ ${#DEPS_ARRAY[@]} -gt 0 ]; then
    log "installing required dependencies: ${DEPS_ARRAY[*]}"
    mqtt_report "isg/install/$SERVICE_ID/status" "{\"status\":\"installing\",\"message\":\"installing required dependencies\",\"dependencies\":$DEPENDENCIES,\"timestamp\":$(date +%s)}"
    
    # 安装依赖
    for dep in "${DEPS_ARRAY[@]}"; do
        if ! pkg install -y "$dep"; then
            log "failed to install dependency: $dep"
            mqtt_report "isg/install/$SERVICE_ID/status" "{\"status\":\"failed\",\"message\":\"dependency installation failed\",\"dependency\":\"$dep\",\"timestamp\":$(date +%s)}"
            record_install_history "FAILED" "unknown"
            exit 1
        fi
    done
fi

# -----------------------------------------------------------------------------
# 更新包管理器
# -----------------------------------------------------------------------------
log "updating package manager"
mqtt_report "isg/install/$SERVICE_ID/status" "{\"status\":\"installing\",\"message\":\"updating package manager\",\"timestamp\":$(date +%s)}"

if ! pkg update; then
    log "failed to update package manager"
    mqtt_report "isg/install/$SERVICE_ID/status" "{\"status\":\"failed\",\"message\":\"package manager update failed\",\"timestamp\":$(date +%s)}"
    record_install_history "FAILED" "unknown"
    exit 1
fi

# -----------------------------------------------------------------------------
# 安装 Mosquitto
# -----------------------------------------------------------------------------
log "installing mosquitto package"
mqtt_report "isg/install/$SERVICE_ID/status" "{\"status\":\"installing\",\"message\":\"installing mosquitto package\",\"timestamp\":$(date +%s)}"

if ! pkg install -y mosquitto; then
    log "failed to install mosquitto"
    mqtt_report "isg/install/$SERVICE_ID/status" "{\"status\":\"failed\",\"message\":\"mosquitto installation failed\",\"timestamp\":$(date +%s)}"
    record_install_history "FAILED" "unknown"
    exit 1
fi

# 获取安装的版本
VERSION_STR=$(get_current_version)
log "mosquitto version: $VERSION_STR"

# -----------------------------------------------------------------------------
# 创建配置目录
# -----------------------------------------------------------------------------
log "creating configuration directory"
mqtt_report "isg/install/$SERVICE_ID/status" "{\"status\":\"installing\",\"message\":\"creating configuration directory\",\"timestamp\":$(date +%s)}"

mkdir -p "$MOSQUITTO_CONF_DIR"
mkdir -p "$MOSQUITTO_LOG_DIR"

# -----------------------------------------------------------------------------
# 生成默认配置文件
# -----------------------------------------------------------------------------
log "generating default configuration file"
mqtt_report "isg/install/$SERVICE_ID/status" "{\"status\":\"installing\",\"message\":\"generating default configuration file\",\"timestamp\":$(date +%s)}"

cat > "$MOSQUITTO_CONF_FILE" << EOF
# Mosquitto Configuration File
# Auto-generated by servicemanager

# Network Settings
port 1883
bind_address 0.0.0.0

# WebSocket Support
listener 9001
protocol websockets

# Authentication
allow_anonymous false
password_file $MOSQUITTO_PASSWD_FILE

# Persistence
persistence true
persistence_location $TERMUX_VAR_DIR/lib/mosquitto/

# Logging
log_dest file $MOSQUITTO_LOG_DIR/mosquitto.log
log_type error
log_type warning
log_type notice
log_type information
log_timestamp true

# Security
max_connections 100
max_inflight_messages 20
max_queued_messages 100

# Client settings
clientid_prefixes
persistent_client_expiration 1m
EOF

# -----------------------------------------------------------------------------
# 创建用户密码文件
# -----------------------------------------------------------------------------
log "creating user password file"
mqtt_report "isg/install/$SERVICE_ID/status" "{\"status\":\"installing\",\"message\":\"creating user password file\",\"timestamp\":$(date +%s)}"

# 获取 MQTT 配置
load_mqtt_conf

# 创建管理员用户
echo "$MQTT_USER:$MQTT_PASS" | mosquitto_passwd -c "$MOSQUITTO_PASSWD_FILE" "$MQTT_USER"

# 设置合适的权限
chmod 600 "$MOSQUITTO_PASSWD_FILE"

# -----------------------------------------------------------------------------
# 创建服务监控目录和运行脚本
# -----------------------------------------------------------------------------
log "creating service monitor directory"
mqtt_report "isg/install/$SERVICE_ID/status" "{\"status\":\"installing\",\"message\":\"creating service monitor directory\",\"timestamp\":$(date +%s)}"

mkdir -p "$SERVICE_CONTROL_DIR"

# 创建 run 脚本
cat > "$RUN_FILE" << EOF
#!/data/data/com.termux/files/usr/bin/sh
exec mosquitto -c $MOSQUITTO_CONF_FILE 2>&1
EOF

chmod +x "$RUN_FILE"

# 创建 down 文件禁用自启动
touch "$DOWN_FILE"
log "created down file to disable auto-start"

# -----------------------------------------------------------------------------
# 启动服务测试
# -----------------------------------------------------------------------------
log "starting service for testing"
mqtt_report "isg/install/$SERVICE_ID/status" "{\"status\":\"installing\",\"message\":\"starting service for testing\",\"timestamp\":$(date +%s)}"

bash "$SERVICE_DIR/start.sh"

# -----------------------------------------------------------------------------
# 等待服务启动
# -----------------------------------------------------------------------------
log "waiting for service ready"
mqtt_report "isg/install/$SERVICE_ID/status" "{\"status\":\"installing\",\"message\":\"waiting for service ready\",\"timestamp\":$(date +%s)}"

WAITED=0
while [ "$WAITED" -lt "$MAX_WAIT" ]; do
    if bash "$SERVICE_DIR/status.sh" --quiet; then
        log "service is running after ${WAITED}s"
        break
    fi
    sleep "$INTERVAL"
    WAITED=$((WAITED + INTERVAL))
done

if [ "$WAITED" -ge "$MAX_WAIT" ]; then
    log "timeout: service not running after ${MAX_WAIT}s"
    mqtt_report "isg/install/$SERVICE_ID/status" "{\"status\":\"failed\",\"message\":\"service start timeout after installation\",\"timeout\":$MAX_WAIT,\"timestamp\":$(date +%s)}"
    record_install_history "FAILED" "$VERSION_STR"
    exit 1
fi

# -----------------------------------------------------------------------------
# 停止服务 (安装完成后暂停运行)
# -----------------------------------------------------------------------------
bash "$SERVICE_DIR/stop.sh"

# -----------------------------------------------------------------------------
# 记录安装历史
# -----------------------------------------------------------------------------
log "recording installation history"
mqtt_report "isg/install/$SERVICE_ID/status" "{\"status\":\"installing\",\"message\":\"recording installation history\",\"version\":\"$VERSION_STR\",\"timestamp\":$(date +%s)}"

echo "$VERSION_STR" > "$VERSION_FILE"
record_install_history "SUCCESS" "$VERSION_STR"

# -----------------------------------------------------------------------------
# 安装完成
# -----------------------------------------------------------------------------
END_TIME=$(date +%s)
DURATION=$((END_TIME - START_TIME))

log "mosquitto installation completed successfully in ${DURATION}s"
mqtt_report "isg/install/$SERVICE_ID/status" "{\"service\":\"$SERVICE_ID\",\"status\":\"installed\",\"version\":\"$VERSION_STR\",\"duration\":$DURATION,\"timestamp\":$END_TIME}"

exit 0