#!/data/data/com.termux/files/usr/bin/bash
# =============================================================================
# Mosquitto 安装脚本
# 版本: v1.0.0
# 功能: 安装 Mosquitto MQTT Broker 并配置服务监控
# =============================================================================

set -euo pipefail

# -----------------------------------------------------------------------------
# 路径和变量定义
# -----------------------------------------------------------------------------
SERVICE_ID="mosquitto"
BASE_DIR="/data/data/com.termux/files/home/servicemanager"
SERVICE_DIR="$BASE_DIR/$SERVICE_ID"
TERMUX_VAR_DIR="/data/data/com.termux/files/usr/var"
TERMUX_ETC_DIR="/data/data/com.termux/files/usr/etc"

CONFIG_FILE="$BASE_DIR/configuration.yaml"
SERVICEUPDATE_FILE="$BASE_DIR/serviceupdate.json"
VERSION_FILE="$SERVICE_DIR/VERSION"

MOSQUITTO_CONFIG_DIR="$TERMUX_ETC_DIR/mosquitto"
MOSQUITTO_CONFIG_FILE="$MOSQUITTO_CONFIG_DIR/mosquitto.conf"
MOSQUITTO_PASSWD_FILE="$MOSQUITTO_CONFIG_DIR/passwd"

SERVICE_CONTROL_DIR="$TERMUX_VAR_DIR/service/$SERVICE_ID"
CONTROL_FILE="$SERVICE_CONTROL_DIR/supervise/control"
DOWN_FILE="$SERVICE_CONTROL_DIR/down"
RUN_FILE="$SERVICE_CONTROL_DIR/run"

LOG_DIR="$SERVICE_DIR/logs"
LOG_FILE="$LOG_DIR/install.log"
BACKUP_DIR="/sdcard/isgbackup/$SERVICE_ID"
INSTALL_HISTORY_FILE="$BACKUP_DIR/.install_history"

MOSQUITTO_PORT="1883"
DEFAULT_MQTT_USER="admin"
DEFAULT_MQTT_PASS="admin"

# -----------------------------------------------------------------------------
# 辅助函数
# -----------------------------------------------------------------------------
ensure_directories() {
    mkdir -p "$LOG_DIR"
    mkdir -p "$BACKUP_DIR"
    mkdir -p "$MOSQUITTO_CONFIG_DIR"
    mkdir -p "$SERVICE_CONTROL_DIR"
    mkdir -p "/data/data/com.termux/files/usr/var/lib/mosquitto"
    mkdir -p "/data/data/com.termux/files/usr/var/log"
    touch "$INSTALL_HISTORY_FILE" 2>/dev/null || true
}

log() {
    echo "[$(date '+%F %T')] $*" | tee -a "$LOG_FILE"
}

load_mqtt_conf() {
    if [ -f "$CONFIG_FILE" ]; then
        MQTT_HOST=$(grep -Po '^[[:space:]]*host:[[:space:]]*\K.*' "$CONFIG_FILE" | head -n1 || echo "127.0.0.1")
        MQTT_PORT_CONFIG=$(grep -Po '^[[:space:]]*port:[[:space:]]*\K.*' "$CONFIG_FILE" | head -n1 || echo "1883")
        MQTT_USER=$(grep -Po '^[[:space:]]*username:[[:space:]]*\K.*' "$CONFIG_FILE" | head -n1 || echo "admin")
        MQTT_PASS=$(grep -Po '^[[:space:]]*password:[[:space:]]*\K.*' "$CONFIG_FILE" | head -n1 || echo "admin")
    else
        MQTT_HOST="127.0.0.1"
        MQTT_PORT_CONFIG="1883"
        MQTT_USER="admin"
        MQTT_PASS="admin"
    fi
}

mqtt_report_to_file() {
    local topic="$1"
    local payload="$2"
    echo "[$(date '+%F %T')] [MQTT-PENDING] $topic -> $payload" >> "$LOG_FILE"
}

get_mosquitto_pid() {
    local port_pid=$(netstat -tnlp 2>/dev/null | grep ":$MOSQUITTO_PORT " | awk '{print $7}' | cut -d'/' -f1 | head -n1)
    
    if [ -n "$port_pid" ] && [ "$port_pid" != "-" ]; then
        local process_name=$(ps -p "$port_pid" -o comm= 2>/dev/null)
        if [ "$process_name" = "mosquitto" ]; then
            echo "$port_pid"
            return 0
        fi
    fi
    return 1
}

generate_mosquitto_config() {
    local user="${1:-$DEFAULT_MQTT_USER}"
    local pass="${2:-$DEFAULT_MQTT_PASS}"
    
    log "生成 mosquitto 配置文件"
    
    # 生成主配置文件
    cat > "$MOSQUITTO_CONFIG_FILE" << EOF
# Mosquitto MQTT Broker Configuration
# Generated by mosquitto service manager

# 网络设置 - 监听全局 IPv4 地址
bind_address 0.0.0.0
port $MOSQUITTO_PORT
max_connections -1

# 安全设置 - 禁用匿名访问，使用密码认证
allow_anonymous false
password_file $MOSQUITTO_PASSWD_FILE

# 日志设置
log_dest file /data/data/com.termux/files/usr/var/log/mosquitto.log
log_type error
log_type warning
log_type notice
log_type information
log_timestamp true

# 持久化设置
persistence true
persistence_location /data/data/com.termux/files/usr/var/lib/mosquitto/

# 客户端设置
max_keepalive 65535
EOF

    # 生成密码文件
    log "创建默认用户: $user"
    mosquitto_passwd -c -b "$MOSQUITTO_PASSWD_FILE" "$user" "$pass" 2>/dev/null || {
        log "创建密码文件失败"
        return 1
    }
}

record_install_history() {
    local status="$1"
    local version="$2"
    local timestamp=$(date '+%Y-%m-%d %H:%M:%S')
    echo "$timestamp INSTALL $status $version" >> "$INSTALL_HISTORY_FILE"
}

START_TIME=$(date +%s)

# -----------------------------------------------------------------------------
# 主安装流程
# -----------------------------------------------------------------------------
ensure_directories

log "开始安装 mosquitto MQTT broker"
mqtt_report_to_file "isg/install/$SERVICE_ID/status" "{\"status\":\"installing\",\"message\":\"starting installation process\",\"timestamp\":$(date +%s)}"

# -----------------------------------------------------------------------------
# 读取服务依赖配置
# -----------------------------------------------------------------------------
log "读取服务依赖配置"
mqtt_report_to_file "isg/install/$SERVICE_ID/status" "{\"status\":\"installing\",\"message\":\"reading service dependencies\",\"timestamp\":$(date +%s)}"

if [ ! -f "$SERVICEUPDATE_FILE" ]; then
    log "serviceupdate.json 不存在，使用默认依赖"
    DEPENDENCIES='["mosquitto"]'
else
    DEPENDENCIES=$(jq -c ".services[] | select(.id==\"$SERVICE_ID\") | .install_dependencies // [\"mosquitto\"]" "$SERVICEUPDATE_FILE" 2>/dev/null || echo '["mosquitto"]')
fi

# 转换为 bash 数组
DEPS_ARRAY=($(echo "$DEPENDENCIES" | jq -r '.[]' 2>/dev/null || echo "mosquitto"))

log "安装依赖包: ${DEPS_ARRAY[*]}"
mqtt_report_to_file "isg/install/$SERVICE_ID/status" "{\"status\":\"installing\",\"message\":\"installing dependencies\",\"dependencies\":$DEPENDENCIES,\"timestamp\":$(date +%s)}"

# -----------------------------------------------------------------------------
# 安装依赖包（非关键，失败不影响主应用安装）
# -----------------------------------------------------------------------------
log "安装依赖包（如有失败不影响主应用）"
mqtt_report_to_file "isg/install/$SERVICE_ID/status" "{\"status\":\"installing\",\"message\":\"installing dependencies (optional)\",\"dependencies\":$DEPENDENCIES,\"timestamp\":$(date +%s)}"

FAILED_DEPS=()
SUCCESS_DEPS=()

# 分别安装每个依赖，记录成功和失败的包
for dep in "${DEPS_ARRAY[@]}"; do
    if [ "$dep" != "mosquitto" ]; then  # 跳过主应用，单独处理
        log "安装依赖: $dep"
        if pkg install -y "$dep" 2>/dev/null; then
            SUCCESS_DEPS+=("$dep")
            log "✅ 依赖 $dep 安装成功"
        else
            FAILED_DEPS+=("$dep")
            log "❌ 依赖 $dep 安装失败（继续安装主应用）"
        fi
    fi
done

# 上报依赖安装结果
if [ ${#FAILED_DEPS[@]} -gt 0 ]; then
    log "部分依赖安装失败: ${FAILED_DEPS[*]}"
    mqtt_report_to_file "isg/install/$SERVICE_ID/status" "{\"status\":\"installing\",\"message\":\"some dependencies failed but continuing\",\"failed_deps\":[$(printf '\"%s\",' "${FAILED_DEPS[@]}" | sed 's/,$//')],"successful_deps":[$(printf '\"%s\",' "${SUCCESS_DEPS[@]}" | sed 's/,$//')],"timestamp\":$(date +%s)}"
else
    log "所有依赖安装成功: ${SUCCESS_DEPS[*]}"
    mqtt_report_to_file "isg/install/$SERVICE_ID/status" "{\"status\":\"installing\",\"message\":\"all dependencies installed successfully\",\"dependencies\":[$(printf '\"%s\",' "${SUCCESS_DEPS[@]}" | sed 's/,$//')],"timestamp\":$(date +%s)}"
fi

# -----------------------------------------------------------------------------
# 更新包管理器
# -----------------------------------------------------------------------------
log "更新包管理器"
mqtt_report_to_file "isg/install/$SERVICE_ID/status" "{\"status\":\"installing\",\"message\":\"updating package manager\",\"timestamp\":$(date +%s)}"

if ! pkg update; then
    log "包管理器更新失败，但继续安装 mosquitto"
    mqtt_report_to_file "isg/install/$SERVICE_ID/status" "{\"status\":\"installing\",\"message\":\"package manager update failed but continuing\",\"timestamp\":$(date +%s)}"
fi

# -----------------------------------------------------------------------------
# 安装 Mosquitto 主应用（关键步骤）
# -----------------------------------------------------------------------------
log "安装 mosquitto 主应用"
mqtt_report_to_file "isg/install/$SERVICE_ID/status" "{\"status\":\"installing\",\"message\":\"installing mosquitto package\",\"timestamp\":$(date +%s)}"

if ! pkg install -y mosquitto; then
    log "mosquitto 主应用安装失败"
    mqtt_report_to_file "isg/install/$SERVICE_ID/status" "{\"status\":\"failed\",\"message\":\"mosquitto package installation failed\",\"timestamp\":$(date +%s)}"
    record_install_history "FAILED" "unknown"
    exit 1
fi

# 验证主应用安装
log "验证 mosquitto 安装"
if ! command -v mosquitto >/dev/null 2>&1; then
    log "mosquitto 命令不可用，安装失败"
    mqtt_report_to_file "isg/install/$SERVICE_ID/status" "{\"status\":\"failed\",\"message\":\"mosquitto command not available after installation\",\"timestamp\":$(date +%s)}"
    record_install_history "FAILED" "unknown"
    exit 1
fi

# 获取版本信息
VERSION_STR=$(mosquitto -h 2>/dev/null | grep 'version' | awk '{print $3}' 2>/dev/null || echo "unknown")
log "mosquitto 主应用安装成功，版本: $VERSION_STR"

# 上报安装成功和依赖摘要
DEPS_SUMMARY=""
if [ ${#SUCCESS_DEPS[@]} -gt 0 ] && [ ${#FAILED_DEPS[@]} -gt 0 ]; then
    DEPS_SUMMARY="dependencies partially installed (${#SUCCESS_DEPS[@]} success, ${#FAILED_DEPS[@]} failed)"
elif [ ${#SUCCESS_DEPS[@]} -gt 0 ]; then
    DEPS_SUMMARY="all dependencies installed successfully"
elif [ ${#FAILED_DEPS[@]} -gt 0 ]; then
    DEPS_SUMMARY="dependencies installation failed but mosquitto installed"
else
    DEPS_SUMMARY="no additional dependencies required"
fi

mqtt_report_to_file "isg/install/$SERVICE_ID/status" "{\"status\":\"installing\",\"message\":\"mosquitto installed successfully, $DEPS_SUMMARY\",\"version\":\"$VERSION_STR\",\"timestamp\":$(date +%s)}"

# -----------------------------------------------------------------------------
# 生成配置文件
# -----------------------------------------------------------------------------
log "生成 mosquitto 配置文件"
mqtt_report_to_file "isg/install/$SERVICE_ID/status" "{\"status\":\"installing\",\"message\":\"generating configuration\",\"timestamp\":$(date +%s)}"

if ! generate_mosquitto_config "$DEFAULT_MQTT_USER" "$DEFAULT_MQTT_PASS"; then
    log "配置文件生成失败"
    mqtt_report_to_file "isg/install/$SERVICE_ID/status" "{\"status\":\"failed\",\"message\":\"configuration generation failed\",\"timestamp\":$(date +%s)}"
    record_install_history "FAILED" "$VERSION_STR"
    exit 1
fi

# -----------------------------------------------------------------------------
# 注册服务监控
# -----------------------------------------------------------------------------
log "注册 isgservicemonitor 服务"
mqtt_report_to_file "isg/install/$SERVICE_ID/status" "{\"status\":\"installing\",\"message\":\"registering service monitor\",\"timestamp\":$(date +%s)}"

# 创建 run 文件
cat > "$RUN_FILE" << 'EOF'
#!/data/data/com.termux/files/usr/bin/sh
# Mosquitto 服务启动脚本，由 isgservicemonitor 管理
exec mosquitto -c /data/data/com.termux/files/usr/etc/mosquitto/mosquitto.conf 2>&1
EOF

chmod +x "$RUN_FILE"

# 创建 down 文件，禁用自动启动
touch "$DOWN_FILE"
log "已创建 run 和 down 文件"

# -----------------------------------------------------------------------------
# 启动服务进行测试
# -----------------------------------------------------------------------------
log "启动服务进行测试"
mqtt_report_to_file "isg/install/$SERVICE_ID/status" "{\"status\":\"installing\",\"message\":\"starting service for testing\",\"timestamp\":$(date +%s)}"

# 启动服务
if [ -e "$SERVICE_CONTROL_DIR/supervise/control" ]; then
    echo u > "$SERVICE_CONTROL_DIR/supervise/control"
    rm -f "$DOWN_FILE"  # 移除 down 文件以启用服务
else
    log "控制文件不存在，直接启动 mosquitto 进行测试"
    mosquitto -c "$MOSQUITTO_CONFIG_FILE" -d 2>/dev/null || true
fi

# -----------------------------------------------------------------------------
# 等待服务启动并验证
# -----------------------------------------------------------------------------
log "等待服务启动"
mqtt_report_to_file "isg/install/$SERVICE_ID/status" "{\"status\":\"installing\",\"message\":\"waiting for service ready\",\"timestamp\":$(date +%s)}"

MAX_WAIT=60
INTERVAL=2
WAITED=0

while [ "$WAITED" -lt "$MAX_WAIT" ]; do
    if get_mosquitto_pid > /dev/null 2>&1; then
        log "mosquitto 在 ${WAITED}s 后启动成功"
        break
    fi
    sleep "$INTERVAL"
    WAITED=$((WAITED + INTERVAL))
done

if [ "$WAITED" -ge "$MAX_WAIT" ]; then
    log "超时: mosquitto 在 ${MAX_WAIT}s 后仍未启动"
    mqtt_report_to_file "isg/install/$SERVICE_ID/status" "{\"status\":\"failed\",\"message\":\"service start timeout\",\"timeout\":$MAX_WAIT,\"timestamp\":$(date +%s)}"
    record_install_history "FAILED" "$VERSION_STR"
    exit 1
fi

# -----------------------------------------------------------------------------
# 验证端口监听
# -----------------------------------------------------------------------------
log "验证端口监听"
sleep 3

if ! netstat -tulnp 2>/dev/null | grep "0.0.0.0:$MOSQUITTO_PORT" > /dev/null; then
    log "警告: mosquitto 未监听在 0.0.0.0:$MOSQUITTO_PORT"
    # 不作为致命错误，继续安装流程
fi

# -----------------------------------------------------------------------------
# 验证用户名密码认证
# -----------------------------------------------------------------------------
log "验证用户认证"
if timeout 5 mosquitto_pub -h 127.0.0.1 -p "$MOSQUITTO_PORT" -u "$DEFAULT_MQTT_USER" -P "$DEFAULT_MQTT_PASS" -t "test/install" -m "test" -q 1 2>/dev/null; then
    log "用户认证验证成功"
else
    log "警告: 用户认证验证失败，但继续安装流程"
fi

# -----------------------------------------------------------------------------
# 停止测试服务 (安装完成后暂停运行)
# -----------------------------------------------------------------------------
log "停止测试服务"
if [ -e "$SERVICE_CONTROL_DIR/supervise/control" ]; then
    echo d > "$SERVICE_CONTROL_DIR/supervise/control"
    touch "$DOWN_FILE"  # 创建 down 文件禁用自启动
else
    # 杀死直接启动的进程
    MOSQUITTO_PID=$(get_mosquitto_pid || echo "")
    if [ -n "$MOSQUITTO_PID" ]; then
        kill "$MOSQUITTO_PID" 2>/dev/null || true
        log "已停止测试 mosquitto 进程 $MOSQUITTO_PID"
    fi
fi

sleep 2

# -----------------------------------------------------------------------------
# 记录安装历史和版本信息
# -----------------------------------------------------------------------------
log "记录安装历史"
mqtt_report_to_file "isg/install/$SERVICE_ID/status" "{\"status\":\"installing\",\"message\":\"recording installation history\",\"version\":\"$VERSION_STR\",\"timestamp\":$(date +%s)}"

echo "$VERSION_STR" > "$VERSION_FILE"
record_install_history "SUCCESS" "$VERSION_STR"

# -----------------------------------------------------------------------------
# 安装完成
# -----------------------------------------------------------------------------
END_TIME=$(date +%s)
DURATION=$((END_TIME - START_TIME))

log "mosquitto 安装完成，耗时 ${DURATION}s"

# 构建完整的安装报告
INSTALL_REPORT="{\"service\":\"$SERVICE_ID\",\"status\":\"installed\",\"version\":\"$VERSION_STR\",\"duration\":$DURATION"

# 添加依赖安装摘要
if [ ${#SUCCESS_DEPS[@]} -gt 0 ]; then
    INSTALL_REPORT="$INSTALL_REPORT,\"successful_deps\":[$(printf '\"%s\",' "${SUCCESS_DEPS[@]}" | sed 's/,$//')]"
fi
if [ ${#FAILED_DEPS[@]} -gt 0 ]; then
    INSTALL_REPORT="$INSTALL_REPORT,\"failed_deps\":[$(printf '\"%s\",' "${FAILED_DEPS[@]}" | sed 's/,$//')]"
fi

INSTALL_REPORT="$INSTALL_REPORT,\"timestamp\":$END_TIME}"

mqtt_report_to_file "isg/install/$SERVICE_ID/status" "$INSTALL_REPORT"

log "安装摘要:"
log "  - 版本: $VERSION_STR"
log "  - 主应用: ✅ 安装成功"
log "  - 依赖成功: ${#SUCCESS_DEPS[@]} 个 (${SUCCESS_DEPS[*]:-无})"
log "  - 依赖失败: ${#FAILED_DEPS[@]} 个 (${FAILED_DEPS[*]:-无})"
log "  - 配置文件: $MOSQUITTO_CONFIG_FILE"
log "  - 密码文件: $MOSQUITTO_PASSWD_FILE"
log "  - 默认用户: $DEFAULT_MQTT_USER"
log "  - 监听地址: 0.0.0.0:$MOSQUITTO_PORT"
log "  - 服务控制: $SERVICE_CONTROL_DIR"

# 如果有依赖安装失败，给出建议
if [ ${#FAILED_DEPS[@]} -gt 0 ]; then
    log ""
    log "⚠️  注意: 以下依赖安装失败，可能影响某些功能:"
    for failed_dep in "${FAILED_DEPS[@]}"; do
        log "   - $failed_dep"
    done
    log "   建议稍后手动安装: pkg install ${FAILED_DEPS[*]}"
fi

exit 0
